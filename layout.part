/////////////////////////////////////////////////////////////////////////////////
//
// Generated keyboard layout file with the Keyboard Layout Editor.
// For more about the software, see http://code.google.com/p/keyboardlayouteditor
//

xkb_symbols "multilingual"
{
	name[Group1] = "Slavonic multilingual phonetic keyboard";
	include "ru(winkeys)"
	key <AB01> { [    Cyrillic_ze,    Cyrillic_ZE,  Macedonia_dse,  Macedonia_DSE ] }; // з З ѕ Ѕ 
	key <AB02> { [   Cyrillic_zhe,   Cyrillic_ZHE,          U04C2,          U04C1 ] }; // ж Ж ӂ Ӂ 
	key <AB03> { [   Cyrillic_tse,   Cyrillic_TSE,      copyright                 ] }; // ц Ц © 
	key <AB04> { [    Cyrillic_ve,    Cyrillic_VE, Cyrillic_u_macron, Cyrillic_U_macron ] }; // в В ӯ Ӯ 
	key <AB05> { [    Cyrillic_be,    Cyrillic_BE                                 ] }; // б Б 
	key <AB06> { [    Cyrillic_en,    Cyrillic_EN,   Cyrillic_nje,   Cyrillic_NJE ] }; // н Н њ Њ 
	key <AB07> { [    Cyrillic_em,    Cyrillic_EM,      trademark,     registered ] }; // м М  ® 
	key <AB08> { [          comma,      semicolon,           less,        minutes ] }; // , ; < 
	key <AB09> { [         period,          colon,        greater,        seconds ] }; // . : > 
	key <AB10> { [          slash,       question,       NoSymbol,          U2030 ] }; // / ?  ‰ 
	key <AC01> { [     Cyrillic_a,     Cyrillic_A                                 ] }; // а А 
	key <AC02> { [    Cyrillic_es,    Cyrillic_ES                                 ] }; // с С 
	key <AC03> { [    Cyrillic_de,    Cyrillic_DE,    Serbian_dje,    Serbian_DJE ] }; // д Д ҕ Ҕ 
	key <AC04> { [    Cyrillic_ef,    Cyrillic_EF, Ukrainian_ghe_with_upturn, Ukrainian_GHE_WITH_UPTURN] }; // ф Ф Ґ ґ
	key <AC05> { [   Cyrillic_ghe,   Cyrillic_GHE, Macedonia_gje, Macedonia_GJE   ] }; // г Г 
	key <AC06> { [    Cyrillic_ha,    Cyrillic_HA,       multiply                 ] }; // х Х × 
// TODO Add ^^ bullet operator
	key <AC07> { [ Cyrillic_shorti, Cyrillic_SHORTI,    Cyrillic_je,    Cyrillic_JE ] }; // й Й ј Ј 
	key <AC08> { [    Cyrillic_ka,    Cyrillic_KA,  Macedonia_kje,  Macedonia_KJE ] }; // к К ќ Ќ 
	key <AC09> { [    Cyrillic_el,    Cyrillic_EL,   Cyrillic_lje,   Cyrillic_LJE ] }; // л Л љ Љ 
	key <AC10> { [   Cyrillic_che,   Cyrillic_CHE,       ellipsis                 ] }; // ч Ч 
	key <AC11> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN, rightsinglequotemark, hyphen ] }; // ь Ь '
	key <AD01> { [    Cyrillic_ya,    Cyrillic_YA,  Cyrillic_dzhe,  Cyrillic_DZHE ] }; // я Я џ Џ 
	key <AD02> { [   Cyrillic_sha,   Cyrillic_SHA,          U0450,          U0400 ] }; // ш Ш ѐ Ѐ 
	key <AD03> { [    Cyrillic_ie,    Cyrillic_IE,   Ukrainian_ie,   Ukrainian_IE ] }; // е Е   
	key <AD04> { [    Cyrillic_er,    Cyrillic_ER, Cyrillic_i_macron, Cyrillic_I_macron ] }; // р Р ӣ Ӣ 
	key <AD05> { [    Cyrillic_te,    Cyrillic_TE,   Serbian_tshe,   Serbian_TSHE ] }; // т Т ћ Ћ 
	key <AD06> { [  Cyrillic_yeru,  Cyrillic_YERU,   Ukrainian_yi,   Ukrainian_YI ] }; // ы Ы   
	key <AD07> { [     Cyrillic_u,     Cyrillic_U, Byelorussian_shortu, Byelorussian_SHORTU ] }; // у У ў Ў 
	key <AD08> { [     Cyrillic_i,     Cyrillic_I,    Ukrainian_i,    Ukrainian_I ] }; // и И   
	key <AD09> { [     Cyrillic_o,     Cyrillic_O,          U045D,          U040D ] }; // о О ѝ Ѝ 
	key <AD10> { [    Cyrillic_pe,    Cyrillic_PE,        section,      paragraph ] }; // п П § ¶ 
	key <AD11> { [    Cyrillic_yu,    Cyrillic_YU,    bracketleft,      braceleft ] }; // ю Ю [ { 
	key <AD12> { [     Cyrillic_e,     Cyrillic_E,   bracketright,     braceright ] }; // э Э ] } 
	key <AE01> { [       NoSymbol,       NoSymbol, guillemotright,     U203A ] }; //   » › 
	key <AE03> { [       NoSymbol,       NoSymbol,     numbersign                 ] }; //   # 
	key <AE04> { [       NoSymbol,         dollar                                 ] }; //  $ 
	key <AE06> { [       NoSymbol,     apostrophe,     asciitilde, asciicircum    ] }; //  ' ~ 
	key <AE07> { [       NoSymbol,      ampersand,         plus                 ] }; //  & + 
	key <AE08> { [       NoSymbol,       NoSymbol, doublelowquotemark             ] }; //
	key <AE09> { [       NoSymbol,       NoSymbol, leftdoublequotemark            ] }; //
	key <AE10> { [       NoSymbol,       NoSymbol, rightdoublequotemark           ] }; //
	key <AE12> { [ Cyrillic_shcha, Cyrillic_SHCHA,       equal                 ] }; // щ Щ = 
	key <BKSL> { [    Cyrillic_io,    Cyrillic_IO,      backslash,            bar ] }; // ё Ё / | 
	key <TLDE> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN, guillemotleft, U2039] }; // ъ Ъ « ‹ 
};

